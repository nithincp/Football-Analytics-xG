# -*- coding: utf-8 -*-
"""xG.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1eQIJs3h7jm0dIFwpaU4lrVvCuP7jAfPi
"""

import pandas as pd

pd.set_option('display.max_rows', 1000)

url = 'https://fbref.com/en/comps/9/schedule/Premier-League-Scores-and-Fixtures'

epl_list = []

epl_list.append(pd.read_html(url,index_col=False,flavor='lxml')[0])

epl_list = pd.concat(epl_list, axis=0, ignore_index=True)

epl_df = epl_list[epl_list['Wk'].notna()]

epl_df = epl_df.rename(columns={'xG':'xGHome'
                   ,'xG.1':'xGAway'})

print(epl_df.columns.tolist())

epl_df['HomeScore'] = epl_df['Score'].str[0]
epl_df['AwayScore'] = epl_df['Score'].str[2]

epl_df = epl_df.drop(['Match Report','Notes'],axis=1)

epl_df['Date'] = pd.to_datetime(epl_df['Date'])

print(epl_df.head(5))

epl_df.sort_values(by='Date', inplace=True)

epl_df = epl_df[['Wk','Day','Date','Time','Home','HomeScore','xGHome','AwayScore','xGAway','Away','Attendance','Venue','Referee']]

epl_df = epl_df.dropna()

epl_df = epl_df[['Date','Home','HomeScore','xGHome','AwayScore','xGAway','Away']].reset_index(drop=True)

epl_df

league_Mean_Home_xG = round((epl_df['xGHome'].mean()),2)
league_Mean_Away_xG = round((epl_df['xGAway'].mean()),2)

print(f'The mean home expected goals is {league_Mean_Home_xG}')
print(f'The mean away expected goals is {league_Mean_Away_xG}')

home_team_xg_strength_offense = epl_df.groupby('Home').agg({'xGHome': 'sum', 'Home': ['count', 'first']})

home_team_xg_strength_offense

home_team_xg_strength_offense.columns = ['xGHome', 'TotalGames', 'Home']

home_team_xg_strength_offense['xGHome_offense_rating'] = (home_team_xg_strength_offense['xGHome'] / home_team_xg_strength_offense['TotalGames']) / league_Mean_Home_xG

home_team_xg_strength_offense = home_team_xg_strength_offense.reset_index(drop = True)

home_team_xg_strength_offense = pd.DataFrame(home_team_xg_strength_offense)

home_team_xg_strength_offense.columns = ['xGHome', 'TotalGames','Home','xGHome_offense_rating']

home_team_xg_strength_offense = home_team_xg_strength_offense[['Home','xGHome','TotalGames','xGHome_offense_rating']]

home_team_xg_strength_offense.sort_values('xGHome_offense_rating', ascending=False)

away_team_xg_strength_offense = epl_df.groupby('Away').agg({'xGAway':'sum', 'Away':['count','first']})

away_team_xg_strength_offense.columns = ['xGAway','TotalGames','Away']

away_team_xg_strength_offense['xGAway_offense_rating'] = (away_team_xg_strength_offense['xGAway']/away_team_xg_strength_offense['TotalGames'])/league_Mean_Away_xG

away_team_xg_strength_offense

away_team_xg_strength_offense = away_team_xg_strength_offense.reset_index(drop = True)

away_team_xg_strength_offense = pd.DataFrame(away_team_xg_strength_offense)

away_team_xg_strength_offense.sort_values('xGAway_offense_rating',ascending=False)

home_team_xg_strength_defense = epl_df.groupby('Home').agg({'xGAway': 'sum', 'Home': ['count', 'first']})

home_team_xg_strength_defense

home_team_xg_strength_defense.columns = ['xGAway', 'TotalGames', 'Home']

home_team_xg_strength_defense['xGHome_defense_rating'] = (home_team_xg_strength_defense['xGAway'] / home_team_xg_strength_defense['TotalGames']) / league_Mean_Away_xG

home_team_xg_strength_defense = home_team_xg_strength_defense.reset_index(drop = True)

home_team_xg_strength_defense.sort_values('xGHome_defense_rating')

home_team_xg_strength_defense = home_team_xg_strength_defense.rename(columns={'xGAway':'xG_Conceded_at_Home'})

away_team_xg_strength_defense = epl_df.groupby('Away').agg({'xGHome': 'sum', 'Away': ['count', 'first']})

away_team_xg_strength_defense

away_team_xg_strength_defense.columns = ['xG_Conceded_at_Away', 'TotalGames', 'Away']

away_team_xg_strength_defense['xGAway_defense_rating'] = (away_team_xg_strength_defense['xG_Conceded_at_Away'] / away_team_xg_strength_defense['TotalGames']) / league_Mean_Home_xG

away_team_xg_strength_defense = away_team_xg_strength_defense.reset_index(drop = True)

away_team_xg_strength_defense.sort_values('xGAway_defense_rating')